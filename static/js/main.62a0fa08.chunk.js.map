{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","timeLeft","setTimeLeft","title","setTitle","isRunning","setIsRunning","intervelRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAGA,SAASA,EAAQC,GACd,OAAOA,EAAKC,WAAWC,SAAS,EAAG,KAGvB,SAASC,IAAO,IAAD,EACIC,mBAAS,MADb,mBACrBC,EADqB,KACXC,EADW,OAEFF,mBAAS,6BAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGOJ,oBAAS,GAHhB,mBAGrBK,EAHqB,KAGTC,EAHS,KAItBC,EAAcC,iBAAO,MA2B3B,SAASC,IACPC,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBP,EAAS,8BACTF,EAAY,MACZI,GAAa,GAGf,IAAMM,EAAUjB,EAAQkB,KAAKC,MAAMb,EAAS,KACtCc,EAAUpB,EAAQM,EAAoB,GAATW,GAEnC,OACE,yBAAKI,UAAU,OACb,4BAAKb,GAEL,yBAAKa,UAAU,SACb,8BAAOJ,GACP,mCACA,8BAAOG,IAGT,yBAAKC,UAAU,YACXX,GAAa,4BAAQY,QA/C7B,WAC6B,OAAxBV,EAAYI,UACfP,EAAS,uBACTE,GAAa,GAEbC,EAAYI,QAAUO,aAAa,WACjChB,GAAa,SAAAD,GACX,OAAGA,GAAY,EAAUA,EAAW,GAGpCQ,IACO,QAET,QAkCiB,SACdJ,GAAa,4BAAQY,QAhC5B,WAC6B,OAAxBV,EAAYI,UAEfD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBP,EAAS,eACTE,GAAa,MA0BK,QACd,4BAAQW,QAAWR,GAAnB,WC1DRU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.62a0fa08.chunk.js","sourcesContent":["import React , {useState, useRef} from 'react';\nimport './App.css';\n\nfunction padTime(time){\n   return time.toString().padStart(2, '0');\n}\n\nexport default function App() {\n  const [timeLeft, setTimeLeft] = useState(25*60);//takes in seconds\n  const [title, setTitle] = useState('Let the countdown begin!!');\n  const [isRunning , setIsRunning] = useState(false);\n  const intervelRef = useRef(null);\n\n  function startTimer(){\n    if(intervelRef.current !== null) return;\n    setTitle(`You're doing great!`)\n    setIsRunning(true);\n    //storing current intervel\n    intervelRef.current = setInterval( () => {\n      setTimeLeft( timeLeft => {\n        if(timeLeft >= 1) return timeLeft - 1;\n\n        //reset timer\n        resetTimer();\n        return 0;\n      });//through this react gonna look throung previous value and update , without this app wont wrok\n    },1000);\n  }\n\n  function stopTimer(){\n    if(intervelRef.current === null) return;\n    //clearing the intervel\n    clearInterval(intervelRef.current);\n    intervelRef.current = null;\n    setTitle('Keep it up!');\n    setIsRunning(false);\n  }\n\n  function resetTimer(){\n    clearInterval(intervelRef.current);\n    intervelRef.current = null;\n    setTitle('Ready to go another round?');\n    setTimeLeft(25*60);\n    setIsRunning(false);\n  }\n\n  const minutes = padTime(Math.floor(timeLeft/60));\n  const seconds = padTime(timeLeft - minutes* 60); \n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n\n      <div className=\"buttons\">\n        {!isRunning && <button onClick = {startTimer}>Start</button>}\n        {isRunning && <button onClick = {stopTimer}>Stop</button>}\n        <button onClick = {resetTimer}>Reset</button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}